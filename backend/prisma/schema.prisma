// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  // provider = "prisma-client-js"
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(uuid())
  firstName        String
  lastName         String
  emailAddress     String         @unique
  oauthTokens      Json
  interests        Interest[]
  likedAttractions Attraction[]   @relation("UserLikes")
  gps              String
  notifications    Notification[]
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model Interest {
  name        String       @id
  users       User[]
  audioGuides AudioGuide[]
}

model Notification {
  id           String           @id @default(uuid())
  userId       String
  type         NotificationType
  audioGuideId String?
  user         User             @relation(fields: [userId], references: [id])
  audioGuide   AudioGuide?      @relation(fields: [audioGuideId], references: [id])
  createdAt    DateTime         @default(now())
}

enum NotificationType {
  CoolFact
  AudioGuide
}

model Attraction {
  id          String       @id @default(uuid())
  photoUrls   String[]
  name        String
  gps         String
  likedBy     User[]       @relation("UserLikes")
  textGuide   TextGuide[]
  audioGuides AudioGuide[]
}

model TextGuide {
  id           String       @id @default(uuid())
  attractionId String
  content      String
  attraction   Attraction   @relation(fields: [attractionId], references: [id])
  AudioGuide   AudioGuide[]
}

model AudioGuide {
  id           String         @id @default(uuid())
  attractionId String
  title        String
  textGuideId  String
  interests    Interest[]
  textGuide    TextGuide      @relation(fields: [textGuideId], references: [id])
  attraction   Attraction     @relation(fields: [attractionId], references: [id])
  Notification Notification[]
}

model ChatThread {
  id           String        @id @default(uuid())
  chatMessages ChatMessage[]
}

model ChatMessage {
  id           String     @id @default(uuid())
  chatThreadId String
  content      String
  chatThread   ChatThread @relation(fields: [chatThreadId], references: [id])
  createdAt    DateTime   @default(now())
}
